---
layout: page
title: Open ID Support
description: Configure an API with OpenID.
product: cm
category: learn
subcategory: API Admin
weight: 20
type: page
nav-title: 
no-nav: true
no-catalog: true
---
<h2 id="top">Open ID Support</h2>
<p>Configure an API with OpenID.</p>
<div class = "divider1"></div>


<h3 style="color: gray;">Table of Contents</h3>
<ol class="table_of_contents">
  <li><a href="#what_is_openid">What is OpenID?</a></li>
  <li><a href="#what_openid_versions_are_supported">What OpenID versions are supported?</a></li>
  <li><a href="#how_do_i_set_up_an_my_deployment_to_support_openid">How do I set up my deployment to support OpenID?</a></li>
  <li><a href="#what_is_a_relying_party">What is a Relying Party?</a></li>
  <li><a href="#what_is_the_difference_between_using_openid_versus_oauth_for_authentication">What is the difference between using OpenID versus OAuth for authentication?</a></li>
  <li><a href="#how_do_i_configure_my_api_with_an_openid_provider">How do I configure my API with an OpenID Provider?</a></li>
  <li><a href="#what_is_a_discovery_url">What is a Discovery URL?</a></li>
  <li><a href="#what_is_a_realm">What is a Realm?</a></li>
</ol>
<div class = "divider1"></div>



<a name="what_is_openid"></a><h3>What is OpenID?</h3>
<p>OpenID is an open decentralized standard for authenticating users. It can be used for access control and allows users to log on to different services with the same digital identity where these services trust the authentication body. OpenID simplifies the authentication process because there is only one username and password to remember.</p>
<p>OpenID 2.0 defines the following roles of users and applications:</p>
<ul>
  <li><strong>End-user</strong>&#8212;The person who wants to log in.</li>
  <li><strong>OpenID Identifier</strong>&#8212;The standard URI or XRI used to identify the end-user.</li>
  <li><strong>OpenID Provider</strong>&#8212;A service provider that allows you to register OpenID URLs and XRIs and provides OpenID authentication.
</li>
  <li><strong>Relying Party </strong>- The site that wants to verify the end-user identity. It is also called Service Provider.</li>
  <li><strong>Server Agent</strong>&#8212;The server that verifies the end-user's OpenID. It usually is the same of the OpenID Provider.</li>
  <li><strong>User Agent</strong>&#8212;The program used by the end-user to access to the provider or to the relying party. It usually is a browser.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="what_openid_versions_are_supported"></a><h3>What OpenID versions are supported?</h3>
<p>The platform supports version 2.0 of OpenID using OAuth 2.0 or OAuth 1.0a.</p>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_set_up_an_my_deployment_to_support_openid"></a><h3>How do I set up my deployment to support OpenID?</h3>
<p>Before your API can use OpenID, your site administrator must perform some setup steps  in the <em>Site Administration &gt; Domains</em> section to make the OpenID domain available.</p>
<p>If your installation is not set up to support OpenID, contact your Administrator for assistance.</p>
<p>For more information on the Site Administrator's role, see  <a href="site_administration_domains.htm#how_do_i_configure_an_openid_relying_party_domain">How do I configure an OpenID Relying Party domain?</a></p>
<p><a href="#top">Back to top</a></p>



<a name="what_is_a_relying_party"></a><h3>What is a Relying Party?</h3>
<p>A Relying Party is service provider (for example, a website or application) that can verify the end-user's identifier. The OpenID Provider is a service that specializes in registering OpenID URLs or XRIs. OpenID enables an end-user to communicate with a relying party. This communication is done through the exchange of an identifier (e.g., URL or XRI chosen by the end-user to name the end-user's identity). An OpenID Provider provides the OpenID authentication.</p>
<p>The relying party discovers the OpenID provider URL by requesting the XRDS document (i.e., Yadis document), with the content type application/xrds+xml. This document may be available at the target URL and is always available for a target XRI. The exchange is enabled by a User-agent, which is the program (such as a browser) used by the end-user to communicate with the relying party and OpenID provider.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_is_the_difference_between_using_openid_versus_oauth_for_authentication"></a><h3>What is the difference between using OpenID versus OAuth for authentication?</h3>
<p>The difference between using OpenID versus OAuth for authentication is as follows:</p>
<ul>
  <li>With OpenID the application first asks the user for their identity and the user provides the URL of an OpenID Provider instead of credentials.</li>
  <li>With OAuth, the application requests an OAuth token to access the API on the user's behalf.</li>
</ul>
<p>If the user grants access, the application retrieves the identifier for establishing the identity using the API. In both cases access to the Identity Provider involves authentication with the Identity Provider.</p>
<p><strong>Summary:</strong></p>
<ul>
  <li>With OpenID an application allows the user access because it trusts the OpenID Provider.</li>
  <li>With OAuth, the API provider allows the application access because it trusts its OAuth tokens.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="how_do_i_configure_my_api_with_an_openid_provider"></a><h3>How do I configure my API with an OpenID Provider?</h3>
<p>There are two ways you can configure your API with an OpenID Provider. Using the <strong>OAuth Details </strong>function on the <em>API Details</em> page, you can configure OAuth for your API and do either of the following:</p>
<ul>
  <li>Select an &quot;OAuth Provider&quot; from the from the drop-down menu that is pre-configured with an OpenID Relying Party.</li>
  <li>Select the &quot;3rd Party Provider&quot; option and specify the Authorization Server URL of your preferred OpenID Provider.</li>
</ul>
<p><a href="#top">Back to top</a></p>



<a name="what_is_a_discovery_url"></a><h3>What is a Discovery URL?</h3>
<p>An OpenID discovery URL represents the location of the relying party's OpenID endpoints that are published using the Yadis protocol. OpenID 2.0 providers advertise the location of their endpoints, as well as the versions and extensions that they support using Yadis. For example, the Google discovery URL is (https://www.google.com/accounts/o8/id).</p>
<p>The OpenID provider verifies a relying party's realm and endpoints by making a Yadis request to the openid.realm to discover the realm's OpenID endpoints. If the OpenID Provider is unable to verify the realm and endpoints, the user will be warned that the user is signing into an unverified site.</p>
<p><a href="#top">Back to top</a></p>



<a name="what_is_a_realm"></a><h3>What is a Realm?</h3>
<p>A "realm" is a pattern that represents the part of URL-space for which an OpenID Authentication request is valid. A realm is designed to give the end user an indication of the scope of the authentication request. OpenID providers must present the realm when requesting the end user's approval for an authentication request. The realm must be used by OpenID providers to uniquely identify Relying Parties. For example, OpenID providers can use the realm to allow the end user to automate approval of authentication requests.</p>
<p><a href="#top">Back to top</a></p>



<div class = "divider1"></div>

